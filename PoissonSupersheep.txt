mu=4*pi*10**(-7) #[N/A^2]
I=4 #[A]
xm=0.1 #[m]
zm=0.1 #[m]
Bm=14 #[G]
dB=1 #[G]

txt_position=sprintf("%s_position.txt",ARG1)
#txt_position2=sprintf("%s_position2.txt",ARG1)
table_vector1=sprintf("%s_vector1.table",ARG1)
table_vector2=sprintf("%s_vector2.table",ARG1)
table_image1=sprintf("%s_image1.table",ARG1)
table_image2=sprintf("%s_image2.table",ARG1)
table_contour1=sprintf("%s_contour1.table",ARG1)
table_contour2=sprintf("%s_contour2.table",ARG1)
pdf_image1=sprintf("%s_image1.pdf",ARG1)
pdf_image2=sprintf("%s_image2.pdf",ARG1)
pdf_danmen=sprintf("%s_danmen.pdf",ARG1)
#-----------------------------------------------------

#positionÇÃì«Ç›éÊÇË
stats txt_position nooutput
N=int(STATS_records-1)
do for[i=0:N]{
stats txt_position using 1:2 every ::i::i name sprintf("S%i",i) nooutput
}

#é•èÍ
l(x1,y1,z1,x2,y2,z2)=sqrt((x1-x2)**2+(y1-y2)**2+(z1-z2)**2)

theta1(x,y,z,x1,y1,z1,x2,y2,z2)=acos((l(x1,y1,z1,x2,y2,z2)**2+l(x,y,z,x1,y1,z1)**2-l(x,y,z,x2,y2,z2)**2)/(2*l(x1,y1,z1,x2,y2,z2)*l(x,y,z,x1,y1,z1)))
theta2(x,y,z,x1,y1,z1,x2,y2,z2)=acos(-(l(x1,y1,z1,x2,y2,z2)**2+l(x,y,z,x2,y2,z2)**2-l(x,y,z,x1,y1,z1)**2)/(2*l(x1,y1,z1,x2,y2,z2)*l(x,y,z,x2,y2,z2)))
d(x,y,z,x1,y1,z1,x2,y2,z2)=l(x,y,z,x1,y1,z1)*sin(theta1(x,y,z,x1,y1,z1,x2,y2,z2))

px(x,y,z,x1,y1,z1,x2,y2,z2)=((y2-y1)*(z-z1)-(z2-z1)*(y-y1))/(l(x1,y1,z1,x2,y2,z2)*d(x,y,z,x1,y1,z1,x2,y2,z2))
py(x,y,z,x1,y1,z1,x2,y2,z2)=((z2-z1)*(x-x1)-(x2-x1)*(z-z1))/(l(x1,y1,z1,x2,y2,z2)*d(x,y,z,x1,y1,z1,x2,y2,z2))
pz(x,y,z,x1,y1,z1,x2,y2,z2)=((x2-x1)*(y-y1)-(y2-y1)*(x-x1))/(l(x1,y1,z1,x2,y2,z2)*d(x,y,z,x1,y1,z1,x2,y2,z2))

B1(x,y,z,x1,y1,z1,x2,y2,z2)=(mu*I/(4*pi*d(x,y,z,x1,y1,z1,x2,y2,z2)))*(cos(theta1(x,y,z,x1,y1,z1,x2,y2,z2))-cos(theta2(x,y,z,x1,y1,z1,x2,y2,z2)))*10**4

Bx(x,y,z)=sum [i=0:N-1] sum[j=1:20] (B1(x,y,z,value(sprintf("S%i_max_x",i))*10**(-2),value(sprintf("S%i_max_y",i))*10**(-2),(1.95+0.1*j)*10**(-2),value(sprintf("S%i_max_x",i+1))*10**(-2),value(sprintf("S%i_max_y",i+1))*10**(-2),(1.95+0.1*j)*10**(-2))*px(x,y,z,value(sprintf("S%i_max_x",i))*10**(-2),value(sprintf("S%i_max_y",i))*10**(-2),(1.95+0.1*j)*10**(-2),value(sprintf("S%i_max_x",i+1))*10**(-2),value(sprintf("S%i_max_y",i+1))*10**(-2),(1.95+0.1*j)*10**(-2))+B1(x,y,z,value(sprintf("S%i_max_x",i))*10**(-2),value(sprintf("S%i_max_y",i))*10**(-2),-(1.95+0.1*j)*10**(-2),value(sprintf("S%i_max_x",i+1))*10**(-2),value(sprintf("S%i_max_y",i+1))*10**(-2),-(1.95+0.1*j)*10**(-2))*px(x,y,z,value(sprintf("S%i_max_x",i))*10**(-2),value(sprintf("S%i_max_y",i))*10**(-2),-(1.95+0.1*j)*10**(-2),value(sprintf("S%i_max_x",i+1))*10**(-2),value(sprintf("S%i_max_y",i+1))*10**(-2),-(1.95+0.1*j)*10**(-2)))
By(x,y,z)=sum [i=0:N-1] sum[j=1:20] (B1(x,y,z,value(sprintf("S%i_max_x",i))*10**(-2),value(sprintf("S%i_max_y",i))*10**(-2),(1.95+0.1*j)*10**(-2),value(sprintf("S%i_max_x",i+1))*10**(-2),value(sprintf("S%i_max_y",i+1))*10**(-2),(1.95+0.1*j)*10**(-2))*py(x,y,z,value(sprintf("S%i_max_x",i))*10**(-2),value(sprintf("S%i_max_y",i))*10**(-2),(1.95+0.1*j)*10**(-2),value(sprintf("S%i_max_x",i+1))*10**(-2),value(sprintf("S%i_max_y",i+1))*10**(-2),(1.95+0.1*j)*10**(-2))+B1(x,y,z,value(sprintf("S%i_max_x",i))*10**(-2),value(sprintf("S%i_max_y",i))*10**(-2),-(1.95+0.1*j)*10**(-2),value(sprintf("S%i_max_x",i+1))*10**(-2),value(sprintf("S%i_max_y",i+1))*10**(-2),-(1.95+0.1*j)*10**(-2))*py(x,y,z,value(sprintf("S%i_max_x",i))*10**(-2),value(sprintf("S%i_max_y",i))*10**(-2),-(1.95+0.1*j)*10**(-2),value(sprintf("S%i_max_x",i+1))*10**(-2),value(sprintf("S%i_max_y",i+1))*10**(-2),-(1.95+0.1*j)*10**(-2)))
Bz(x,y,z)=sum [i=0:N-1] sum[j=1:20] (B1(x,y,z,value(sprintf("S%i_max_x",i))*10**(-2),value(sprintf("S%i_max_y",i))*10**(-2),(1.95+0.1*j)*10**(-2),value(sprintf("S%i_max_x",i+1))*10**(-2),value(sprintf("S%i_max_y",i+1))*10**(-2),(1.95+0.1*j)*10**(-2))*pz(x,y,z,value(sprintf("S%i_max_x",i))*10**(-2),value(sprintf("S%i_max_y",i))*10**(-2),(1.95+0.1*j)*10**(-2),value(sprintf("S%i_max_x",i+1))*10**(-2),value(sprintf("S%i_max_y",i+1))*10**(-2),(1.95+0.1*j)*10**(-2))+B1(x,y,z,value(sprintf("S%i_max_x",i))*10**(-2),value(sprintf("S%i_max_y",i))*10**(-2),-(1.95+0.1*j)*10**(-2),value(sprintf("S%i_max_x",i+1))*10**(-2),value(sprintf("S%i_max_y",i+1))*10**(-2),-(1.95+0.1*j)*10**(-2))*pz(x,y,z,value(sprintf("S%i_max_x",i))*10**(-2),value(sprintf("S%i_max_y",i))*10**(-2),-(1.95+0.1*j)*10**(-2),value(sprintf("S%i_max_x",i+1))*10**(-2),value(sprintf("S%i_max_y",i+1))*10**(-2),-(1.95+0.1*j)*10**(-2)))

B(x,y,z)=sqrt(Bx(x,y,z)**2+By(x,y,z)**2+Bz(x,y,z)**2)


set xr[-xm:xm]
set yr[-zm:zm]

#vector tableçÏê¨
set samples 10
set isosamples 10
set table table_vector1
plot "++" using 1:2:(Bx($1,0,$2)*10**(-3)):(Bz($1,0,$2)*10**(-3)) with vectors
set table table_vector2
plot "++" using 1:2:(Bx($1,$2,0)*10**(-3)):(By($1,$2,0)*10**(-3)) with vectors
unset table
unset samples
unset isosamples

#image tableçÏê¨
set isosamples 30
set table table_image1
splot B(x,0,y)
set table table_image2
splot B(x,y,0)
unset table

#ìôçÇê¸tableçÏê¨
set contour base
set cntrparam levels incremental 0,dB,Bm
unset surface
set table table_contour1
splot B(x,0,y)
set table table_contour2
splot B(x,y,0)
unset table

#ï`é 
reset
set xr[-xm:xm]
set yr[-zm:zm]
set palette rgbformulae 33,13,10
set cbrange[0:Bm]
unset key
set xlabel "x[m]"
set ylabel "z[m]"
set cblabel "B[G]"
set terminal pdf size 6in,5in
set output pdf_image1
plot table_image1 with image, table_contour1 w l lc rgb "white" lw 1, table_vector1 with vector lc rgb "white" lw 1#, txt_position2 using ($1*10**(-2)):($2*10**(-2)) w p pt 7 lc -1 ps 0.1
set yr[-xm:xm]
set ylabel "y[m]"
set output pdf_image2
plot table_image2 with image, table_contour2 w l lc rgb "white" lw 1, table_vector2 with vector lc rgb "white" lw 1, txt_position u ($1*10**(-2)):($2*10**(-2)) w l lc -1 lw 2


#danmen ï`é 
reset
set xr[-xm:xm]
set yr[-2:Bm]
set zeroaxis
set xlabel "x[m]"
set ylabel "B[G]"
set terminal pdf size 6in,4in enhanced
set output pdf_danmen
plot Bx(x,0,0) w l title "Bx(x,0,0)" lc rgb "red", By(x,0,0) w l title "By(x,0,0)" lc rgb "green", Bz(x,0,0) w l title "Bz(x,0,0)" lc rgb "blue"
